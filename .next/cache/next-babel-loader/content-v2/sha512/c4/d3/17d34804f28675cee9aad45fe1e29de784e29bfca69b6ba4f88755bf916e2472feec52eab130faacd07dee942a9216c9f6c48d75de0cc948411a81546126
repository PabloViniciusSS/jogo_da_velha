{"ast":null,"code":"import _slicedToArray from \"C:/Users/vinic/Documents/GitHub/React/jogo_da_velha/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport default function Calculate_Winter(squares) {\n  var line = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < line.length; i++) {\n    var _line$i = _slicedToArray(line[i], 3),\n        a = _line$i[0],\n        b = _line$i[1],\n        c = _line$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n_c = Calculate_Winter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculate_Winter\");","map":{"version":3,"sources":["C:/Users/vinic/Documents/GitHub/React/jogo_da_velha/src/pages/components/Calculate_Winter.tsx"],"names":["Calculate_Winter","squares","line","i","length","a","b","c"],"mappings":";AAIA,eAAe,SAASA,gBAAT,CAA0BC,OAA1B,EAAkC;AAC7C,MAAMC,IAAI,GAAG,CACT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADS,EAET,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFS,EAGT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHS,EAIT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJS,EAKT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALS,EAMT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANS,EAOT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPS,EAQT,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARS,CAAb;;AAWA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,IAAI,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AAAA,iCAClBD,IAAI,CAACC,CAAD,CADc;AAAA,QAC3BE,CAD2B;AAAA,QACzBC,CADyB;AAAA,QACvBC,CADuB;;AAEjC,QAAGN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAApE,EAAyE;AACrE,aAAON,OAAO,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,SAAO,IAAP;AACH;KAnBuBL,gB","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport styles from '../../styles/components/Calculate_Winter.module.css';\r\n\r\nexport default function Calculate_Winter(squares){\r\n    const line = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ];\r\n\r\n    for(let i = 0; i < line.length; i++) {\r\n        const[a,b,c] = line[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}